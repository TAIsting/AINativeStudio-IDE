name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: false
        type: string

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag || github.ref }}
      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'ainative-studio/package-lock.json'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libx11-dev \
            libxkbfile-dev \
            libsecret-1-dev \
            libnotify-dev \
            libasound2-dev \
            libxtst6 \
            xvfb \
            rpm \
            libkrb5-dev \
            libgssapi-krb5-2
      - name: Install Node.js dependencies
        working-directory: ainative-studio
        run: npm ci
        timeout-minutes: 15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build React components
        working-directory: ainative-studio
        run: npm run buildreact
      - name: Compile TypeScript
        working-directory: ainative-studio
        run: npm run compile
      - name: Tests temporarily disabled
        run: echo "Tests are temporarily disabled on all platforms due to hangs and event listener leaks."
      - name: Build package
        working-directory: ainative-studio
        run: npm run gulp vscode-linux-x64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: List workspace files for debugging
        run: ls -R
      - name: Verify build output
        run: |
          if [ ! -d ../VSCode-linux-x64 ]; then
            echo "::error::Build output directory not found!"
            exit 1
          fi
      - name: Create archive
        run: |
          cd ../VSCode-linux-x64
          tar -czf ../ainative-studio-linux-x64.tar.gz *
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-linux-x64
          path: ../ainative-studio-linux-x64.tar.gz
          retention-days: 7

  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag || github.ref }}
      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'ainative-studio/package-lock.json'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
      - name: Setup Visual Studio environment
        uses: ilammy/msvc-dev-cmd@v1
      - name: Configure Windows for build
        run: |
          try {
            Add-MpPreference -ExclusionPath "$env:GITHUB_WORKSPACE" -ErrorAction SilentlyContinue
          }
          catch {
            Write-Output "Could not add Windows Defender exclusion (may require admin rights)"
          }
          npm config set cache "C:\\npm-cache" --global
          npm config set prefix "C:\\npm-prefix" --global
        shell: powershell
      - name: Install Node.js dependencies
        working-directory: ainative-studio
        run: npm ci
        timeout-minutes: 20
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build React components
        working-directory: ainative-studio
        run: npm run buildreact
      - name: Compile TypeScript
        working-directory: ainative-studio
        run: npm run compile
      - name: Tests temporarily disabled
        run: echo "Tests are temporarily disabled on all platforms due to hangs and event listener leaks."
      - name: Build package
        working-directory: ainative-studio
        run: npm run gulp vscode-win32-x64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        timeout-minutes: 20
      - name: List workspace files for debugging
        run: Get-ChildItem -Recurse
      - name: Verify build output
        shell: pwsh
        run: |
          if (-not (Test-Path ../VSCode-win32-x64)) {
            Write-Error "Build output directory not found!"
            exit 1
          }
      - name: Create archive
        run: 7z a -tzip ../ainative-studio-win32-x64.zip ./*
        working-directory: ../VSCode-win32-x64
        shell: cmd
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-win32-x64
          path: ../ainative-studio-win32-x64.zip
          retention-days: 7

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
          - os: macos-13
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag || github.ref }}
      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'ainative-studio/package-lock.json'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Node.js dependencies
        working-directory: ainative-studio
        run: npm ci
        timeout-minutes: 20
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build React components
        working-directory: ainative-studio
        run: npm run buildreact
      - name: Compile TypeScript
        working-directory: ainative-studio
        run: npm run compile
      - name: Tests temporarily disabled
        run: echo "Tests are temporarily disabled on all platforms due to hangs and event listener leaks."
      - name: Build package
        working-directory: ainative-studio
        run: npm run gulp vscode-darwin-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: List workspace files for debugging
        run: ls -R
      - name: Verify build output
        run: |
          if [ ! -d ../VSCode-darwin-${{ matrix.arch }} ]; then
            echo "::error::Build output directory not found!"
            exit 1
          fi
      - name: Create archive
        run: |
          cd ../VSCode-darwin-${{ matrix.arch }}
          tar -czf ../ainative-studio-darwin-${{ matrix.arch }}.tar.gz *
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-darwin-${{ matrix.arch }}
          path: ../ainative-studio-darwin-${{ matrix.arch }}.tar.gz
          retention-days: 7

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    - name: List downloaded artifacts
      run: find ./artifacts -type f
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/ainative-studio-linux-x64/*.tar.gz
          ./artifacts/ainative-studio-win32-x64/*.zip
          ./artifacts/ainative-studio-darwin-arm64/*.tar.gz
          ./artifacts/ainative-studio-darwin-x64/*.tar.gz
        draft: false
        prerelease: contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc')
        generate_release_notes: true
        tag_name: ${{ github.event.inputs.tag || github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
