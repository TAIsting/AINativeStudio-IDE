name: Build macOS (Parallel)

on:
  workflow_dispatch:
  workflow_call:

jobs:
  # Shared dependency installation
  setup:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
          - os: macos-13
            arch: x64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    outputs:
      cache-key-arm64: ${{ steps.cache-key-arm64.outputs.key }}
      cache-key-x64: ${{ steps.cache-key-x64.outputs.key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      
      - name: Generate cache key (arm64)
        if: matrix.arch == 'arm64'
        id: cache-key-arm64
        run: |
          echo "key=deps-${{ runner.os }}-arm64-${{ hashFiles('ainative-studio/package-lock.json', 'ainative-studio/build/package-lock.json') }}" >> $GITHUB_OUTPUT
      
      - name: Generate cache key (x64)
        if: matrix.arch == 'x64'
        id: cache-key-x64
        run: |
          echo "key=deps-${{ runner.os }}-x64-${{ hashFiles('ainative-studio/package-lock.json', 'ainative-studio/build/package-lock.json') }}" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            ainative-studio/package-lock.json
            ainative-studio/build/package-lock.json
      
      - name: Install build dependencies
        working-directory: ainative-studio/build
        run: |
          for i in {1..5}; do
            npm ci && break
            if [ $i -eq 5 ]; then
              echo "npm ci in build/ failed too many times" >&2
              exit 1
            fi
            echo "npm ci in build/ failed $i, trying again..."
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install dependencies
        working-directory: ainative-studio
        run: |
          for i in {1..5}; do
            npm ci && break
            if [ $i -eq 5 ]; then
              echo "npm ci failed too many times" >&2
              exit 1
            fi
            echo "npm ci failed $i, trying again..."
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload node_modules
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-macos-${{ matrix.arch }}
          path: |
            ainative-studio/node_modules
            ainative-studio/build/node_modules
          retention-days: 1

  # Parallel compilation jobs for each architecture
  compile-typescript:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
          - os: macos-13
            arch: x64
    runs-on: ${{ matrix.os }}
    needs: setup
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: node-modules-macos-${{ matrix.arch }}
          path: ainative-studio
      
      - name: Cache TypeScript build outputs
        uses: actions/cache@v4
        with:
          path: |
            ainative-studio/out
            ainative-studio/node_modules/.cache
          key: build-${{ runner.os }}-${{ matrix.arch }}-${{ hashFiles('ainative-studio/src/**/*.ts', 'ainative-studio/package-lock.json') }}
          restore-keys: |
            build-${{ runner.os }}-${{ matrix.arch }}-
            build-${{ runner.os }}-
      
      - name: Compile TypeScript
        working-directory: ainative-studio
        run: |
          npm run gulp compile-build-without-mangling
        env:
          NODE_OPTIONS: "--max-old-space-size=16384"
          UV_THREADPOOL_SIZE: 128
      
      - name: Upload TypeScript artifacts
        uses: actions/upload-artifact@v4
        with:
          name: typescript-build-macos-${{ matrix.arch }}
          path: ainative-studio/out
          retention-days: 1

  compile-react:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
          - os: macos-13
            arch: x64
    runs-on: ${{ matrix.os }}
    needs: setup
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: node-modules-macos-${{ matrix.arch }}
          path: ainative-studio
      
      - name: Build React components
        working-directory: ainative-studio
        run: npm run buildreact
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      
      - name: Upload React artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build-macos-${{ matrix.arch }}
          path: ainative-studio/src/vs/workbench/contrib/void/browser/react/dist
          retention-days: 1

  compile-extensions:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
            extension-group: "configuration-editing,css-language-features,debug-auto-launch,debug-server-ready,emmet"
          - os: macos-14
            arch: arm64
            extension-group: "extension-editing,git,git-base,github,github-authentication"
          - os: macos-14
            arch: arm64
            extension-group: "grunt,gulp,html-language-features,ipynb,jake"
          - os: macos-14
            arch: arm64
            extension-group: "json-language-features,markdown-language-features,markdown-math,media-preview,merge-conflict"
          - os: macos-13
            arch: x64
            extension-group: "configuration-editing,css-language-features,debug-auto-launch,debug-server-ready,emmet"
          - os: macos-13
            arch: x64
            extension-group: "extension-editing,git,git-base,github,github-authentication"
          - os: macos-13
            arch: x64
            extension-group: "grunt,gulp,html-language-features,ipynb,jake"
          - os: macos-13
            arch: x64
            extension-group: "json-language-features,markdown-language-features,markdown-math,media-preview,merge-conflict"
    runs-on: ${{ matrix.os }}
    needs: setup
    timeout-minutes: 40
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: node-modules-macos-${{ matrix.arch }}
          path: ainative-studio
      
      - name: Cache extension builds
        uses: actions/cache@v4
        with:
          path: |
            ainative-studio/extensions/*/out
            ainative-studio/extensions/*/node_modules/.cache
          key: extensions-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.extension-group }}-${{ hashFiles('ainative-studio/extensions/**/package-lock.json') }}
          restore-keys: |
            extensions-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.extension-group }}-
            extensions-${{ runner.os }}-${{ matrix.arch }}-
            extensions-${{ runner.os }}-
      
      - name: Compile extension group
        working-directory: ainative-studio
        run: |
          IFS=',' read -ra EXTENSIONS <<< "${{ matrix.extension-group }}"
          for ext in "${EXTENSIONS[@]}"; do
            echo "Building extension: $ext"
            npm run gulp "compile-extension:$ext" || true
          done
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      
      - name: Upload extension artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extensions-${{ matrix.arch }}-${{ strategy.job-index }}-macos
          path: |
            ainative-studio/extensions/*/out
            ainative-studio/extensions/*/package.json
          retention-days: 1

  minify-and-package:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
          - os: macos-13
            arch: x64
    runs-on: ${{ matrix.os }}
    needs: [compile-typescript, compile-react, compile-extensions]
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      
      - name: Restore artifacts to correct locations
        run: |
          # Restore node_modules
          cp -r ./artifacts/node-modules-macos-${{ matrix.arch }}/* ainative-studio/
          
          # Restore TypeScript build
          mkdir -p ainative-studio/out
          cp -r ./artifacts/typescript-build-macos-${{ matrix.arch }}/* ainative-studio/out/
          
          # Restore React build
          mkdir -p ainative-studio/src/vs/workbench/contrib/void/browser/react/dist
          cp -r ./artifacts/react-build-macos-${{ matrix.arch }}/* ainative-studio/src/vs/workbench/contrib/void/browser/react/dist/
          
          # Restore extensions for this architecture
          for ext_dir in ./artifacts/extensions-${{ matrix.arch }}-*-macos; do
            if [ -d "$ext_dir" ]; then
              cp -r "$ext_dir"/* ainative-studio/
            fi
          done
      
      - name: Cache gulp cache
        uses: actions/cache@v4
        with:
          path: ~/.gulp-cache
          key: ${{ runner.os }}-gulp-${{ hashFiles('ainative-studio/package-lock.json', 'ainative-studio/build/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-gulp-
      
      - name: Build and minify client
        working-directory: ainative-studio
        run: |
          npm run gulp vscode-darwin-${{ matrix.arch }}-min
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_OPTIONS: "--max-old-space-size=16384"
          UV_THREADPOOL_SIZE: 128
      
      - name: Package
        working-directory: ainative-studio
        run: npm run gulp vscode-darwin-${{ matrix.arch }}-min-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Verify build output
        run: |
          if [ ! -d "VSCode-darwin-${{ matrix.arch }}" ]; then
            echo "::error::Build output directory not found!"
            exit 1
          fi
        working-directory: ainative-studio
      
      - name: Create archive
        working-directory: ainative-studio/VSCode-darwin-${{ matrix.arch }}
        run: tar -czf ../../ainative-studio-darwin-${{ matrix.arch }}.tar.gz .
      
      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: ainative-studio-darwin-${{ matrix.arch }}
          path: ainative-studio/ainative-studio-darwin-${{ matrix.arch }}.tar.gz
          retention-days: 7